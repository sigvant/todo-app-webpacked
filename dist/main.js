(()=>{"use strict";const t={todoInput:document.querySelector(".todo-input"),todoDateInput:document.querySelector(".todo-date-input"),todoPriorityInput:document.querySelector(".priority-select"),todoButton:document.querySelector(".todo-button"),todoList:document.querySelector(".todo-list"),filterOption:document.querySelector(".filter-todo"),addTabButton:document.querySelector(".tab-button"),tabList:document.querySelector(".tab-list"),tab:document.querySelectorAll(".tab")};function e(t){this.name=t,this.todos=[]}function n(t,e,n,d){this.name=t,this.date=e,this.priority=n,this.status=d}let d;function o(){s();let e=document.querySelector(".tab-active").children[0].children[0].innerText;d.forEach((n=>{n.name==e&&n.todos.forEach((e=>{const n=document.createElement("div");n.classList.add("todo");let d=e.name,o=e.date,a=e.priority;const s=document.createElement("li");s.classList.add("todo-item");const i=document.createElement("div");i.textContent=d,i.classList.add("todo-info-boxes-name");const c=document.createElement("div");c.textContent=o,c.classList.add("todo-info-boxes-date");const l=document.createElement("div");l.textContent=a,l.classList.add("todo-info-boxes-priority"),s.appendChild(i),s.appendChild(c),s.appendChild(l),n.appendChild(s);const r=document.createElement("button");r.textContent="‚úîÔ∏è",r.classList.add("complete-btn"),n.appendChild(r);const u=document.createElement("button");u.textContent="üóëÔ∏è",u.classList.add("trash-btn"),n.appendChild(u),t.todoList.appendChild(n)}))}))}function a(){void 0!==t.tabList.childNodes[0]&&(t.tabList.childNodes[0].classList.add("tab-active"),o())}function s(){return d=null===localStorage.getItem("tabs")?[]:JSON.parse(localStorage.getItem("tabs")),d}t.todoButton.addEventListener("click",(function(e){e.preventDefault();const o=document.createElement("div");o.classList.add("todo");let a=t.todoInput.value,i=t.todoDateInput.value,c=t.todoPriorityInput.value,l=new n(a,i,c);const r=document.createElement("li");r.classList.add("todo-item");const u=document.createElement("div");u.textContent=a,u.classList.add("todo-info-boxes-name");const m=document.createElement("div");m.textContent=i,m.classList.add("todo-info-boxes-date");const p=document.createElement("div");p.textContent=c,p.classList.add("todo-info-boxes-priority"),r.appendChild(u),r.appendChild(m),r.appendChild(p),o.appendChild(r),function(t){s();const e=document.querySelector(".tab-active").childNodes[0].innerText;d.forEach((n=>{n.name==e&&(n.todos.push(t),localStorage.setItem("tabs",JSON.stringify(d)))}))}(l);const L=document.createElement("button");L.textContent="‚úîÔ∏è",L.classList.add("complete-btn"),o.appendChild(L);const h=document.createElement("button");h.textContent="üóëÔ∏è",h.classList.add("trash-btn"),o.appendChild(h),t.todoList.appendChild(o),t.todoInput.value="",t.todoDateInput.value=""})),t.todoList.addEventListener("click",(function(t){const e=t.target;if("trash-btn"===e.classList[0]){const t=e.parentElement;t.classList.add("fall"),function(t){const e=t.childNodes[0].childNodes[0].innerText;s(),d.forEach((t=>{t.todos=t.todos.filter((t=>t.name!=e))})),localStorage.setItem("tabs",JSON.stringify(d))}(t),t.addEventListener("transitionend",(()=>{t.remove()}))}"complete-btn"===e.classList[0]&&e.parentElement.classList.toggle("completed")})),t.filterOption.addEventListener("click",(function(e){t.todoList.childNodes.forEach((function(t){switch(e.target.value){case"all":t.style.display="flex";break;case"completed":t.classList.contains("completed")?t.style.display="flex":t.style.display="none";break;case"uncompleted":t.classList.contains("completed")?t.style.display="none":t.style.display="flex"}}))})),t.addTabButton.addEventListener("click",(function(n){n.preventDefault();let o=new e(prompt("Name your tab!","Popsicle")),i=document.createElement("li");i.classList.add("tab");let c=document.createElement("div");c.classList.add("tab-div");let l=document.createElement("div");l.classList.add("span-div");let r=document.createElement("span");r.textContent=o.name;let u=document.createElement("div");u.classList.add("trashcan-div");let m=document.createElement("button");m.classList.add("trash-btn-tab"),m.textContent="üóëÔ∏è",function(t){s(),d.push(t),localStorage.setItem("tabs",JSON.stringify(d))}(o),l.appendChild(r),c.appendChild(l),u.appendChild(m),i.appendChild(c),i.appendChild(u),t.tabList.appendChild(i),a()})),t.tabList.addEventListener("click",(function(t){const e=t.target;if("trash-btn-tab"===e.classList[0]||"trash-btn"===e.classList[0]){const t=e.parentElement.parentElement;if(1===t.parentElement.childNodes.length)return;t.classList.add("fall"),function(t){s();const e=t.children[0].innerText;d.splice(d.indexOf(e),1),localStorage.setItem("tabs",JSON.stringify(d))}(t),t.addEventListener("transitionend",(()=>{t.remove()}))}if("tab-div"===e.classList[0]||"tab"===e.classList[0]||"span-div"===e.classList[0]){let n=document.querySelectorAll(".tab");t.target.classList.contains("tab")&&(n.forEach((t=>t.classList.remove("tab-active"))),e.classList.add("tab-active"),document.querySelector(".todo-list").innerText="",o())}})),document.addEventListener("DOMContentLoaded",(function(){s(),d.forEach((function(e){let n=e.name,d=document.createElement("li");d.classList.add("tab");let o=document.createElement("div");o.classList.add("tab-div");let a=document.createElement("div");a.classList.add("span-div");let s=document.createElement("span");s.textContent=n;let i=document.createElement("div");i.classList.add("trashcan-div");let c=document.createElement("button");c.classList.add("trash-btn"),c.textContent="üóëÔ∏è",a.appendChild(s),o.appendChild(a),i.appendChild(c),d.appendChild(o),d.appendChild(i),t.tabList.appendChild(d)}))})),document.addEventListener("DOMContentLoaded",a),document.addEventListener("DOMContentLoaded",(function(){let t=new Date,e=t.getDate(),n=t.getMonth()+1;n<10&&(n=`0${n}`);let d=`${t.getFullYear()}-${n}-${e}`;document.querySelector(".todo-date-input").setAttribute("min",d)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,